<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:Imago.Views"
       xmlns:viewModels="clr-namespace:Imago.ViewModels;assembly=Imago" Navigated="AppShell_OnNavigated"
       Title="Imago"      
       BindingContext="{Binding AppShellViewModel, Source={StaticResource ViewModelLocator}}"
       x:DataType="viewModels:AppShellViewModel" 
       x:Class="Imago.AppShell">

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.ForegroundColor" Value="White" />
                <Setter Property="Shell.TitleColor" Value="White" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="{StaticResource Primary}" />
                <Setter Property="Shell.TabBarForegroundColor" Value="White"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="White"/>
            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->
            <!--<Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="White"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{x:OnPlatform UWP=Transparent, iOS=White}" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="Black" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>-->

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <!--<Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Primary}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>-->
        </ResourceDictionary>
    </Shell.Resources>

    <Shell.ItemTemplate>
        <DataTemplate>
            <Grid x:Name="GridControl"  Padding="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="75*" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Source="{Binding BindingContext.Icon, Source={x:Reference GridControl}}"
                       Margin="5"
                       HeightRequest="35" />
                <Label Grid.Column="2" FontSize="24"
                       Text="{Binding BindingContext.Title, Source={x:Reference GridControl}}"
                       VerticalTextAlignment="Center" />
            </Grid>
        </DataTemplate>
    </Shell.ItemTemplate>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->
    <FlyoutItem Title="Ãœbersicht" Icon="person.png">
        <ShellContent Route="CharacterInfoPage" ContentTemplate="{DataTemplate local:CharacterInfoPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Fertigkeiten" Icon="magic.png">
        <ShellContent Route="SkillPage" ContentTemplate="{DataTemplate local:SkillPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Zustand" Icon="swords.png">
        <ShellContent Route="StatusPage" ContentTemplate="{DataTemplate local:StatusPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Inventar" Icon="backpack.png">
        <ShellContent Route="InventoryPage" ContentTemplate="{DataTemplate local:InventoryPage}" />
    </FlyoutItem>
    <FlyoutItem Title="Wiki" Icon="book.png">
        <ShellContent Route="WikiPage" ContentTemplate="{DataTemplate local:WikiPage}" />
    </FlyoutItem>

    <FlyoutItem FlyoutDisplayOptions="AsMultipleItems">
        <ShellContent Route="ChangelogPage" Title="Changelog" Icon="letter.png" ContentTemplate="{DataTemplate local:ChangelogPage}" />
    </FlyoutItem>

    <!-- When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <!--<MenuItem Text="Logout" StyleClass="MenuItemLayoutStyle" Clicked="OnMenuItemClicked">
    </MenuItem>-->

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where 
        you don't want users to be able to navigate away from. If you would like to navigate to this 
        content you can do so by calling 
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent Route="StartPage" ContentTemplate="{DataTemplate local:StartPage}" />
    </TabBar>

    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid Padding="20">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                </Grid.RowDefinitions>

                <Image Margin="5" Source="imago_big.png" VerticalOptions="Fill" HorizontalOptions="Fill"></Image>
                <Label Grid.Row="1" Text="Imago.App" FontSize="30"/>

                <StackLayout Grid.Row="2" Orientation="Horizontal">
                    <Label Text="Version" FontSize="18"/>
                    <Label Text="{Binding Version}" FontSize="18"/>
                </StackLayout>

                <BoxView Grid.Row="3" Color="Black"/>
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
</Shell>
